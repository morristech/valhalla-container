#!/bin/sh

[[ "$1" == "setup" ]] && {
  mkdir -p /service/nginx/log
  mkdir -p /service/router/log
  mkdir -p /var/log/router/main
  mkdir -p /var/log/nginx/main

  cat << 'NGINX' > /service/nginx/run
#!/bin/sh
exec 2>&1
echo "starting nginx"
exec /usr/sbin/nginx -c /etc/nginx/nginx.conf
NGINX

  cat << 'ROUTER' > /service/router/run
#!/bin/sh
exec 2>&1
echo "starting valhalla router"
exec /usr/bin/valhalla_route_service $CONF_FILE 1
ROUTER

  cat << 'RLOG' > /service/router/log/run
#!/bin/sh
exec multilog t /var/log/router/main
RLOG

  cat << 'NLOG' > /service/nginx/log/run
#!/bin/sh
exec multilog t /var/log/nginx/main
NLOG

  cat << 'NCONF' > /etc/nginx/sites-enabled/valhalla.conf
upstream valhalla { server 127.0.0.1:8002; }

server {
  listen 8080;

  location / {
    proxy_pass       http://valhalla;
    proxy_set_header Host $http_host;
  }
}
NCONF

  cat << 'CRON' > /etc/cron.d/process
30 2 * * * root /etc/process >> /var/log/process.log 2>&1
CRON

  chmod 755 /service/nginx/run /service/router/run \
    /service/nginx/log/run /service/router/log/run

  sed -i -e '0,/^/s//daemon off;\n/' \
    -e 's/worker_processes auto/worker_processes 1/g' /etc/nginx/nginx.conf

  jq --arg a $CACHE_MEM --arg b $MAX_DIS \
    '.mjolnir.max_cache_size=($a|tonumber) | .service_limits.auto.max_distance=($b|tonumber)' \
    $CONF_FILE > $CONF_FILE.new

  mv -f $CONF_FILE.new $CONF_FILE

  exit
}

cron &

(
  exec </dev/null >/dev/null 2>&1
  svc -dx /service/* /service/*/log
  exec svscan /service 2>&1
) &

sh
